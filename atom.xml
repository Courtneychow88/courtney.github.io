<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://courtneychow88.github.io</id>
    <title>Courtney Chow</title>
    <updated>2023-06-04T10:13:44.663Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://courtneychow88.github.io"/>
    <link rel="self" href="https://courtneychow88.github.io/atom.xml"/>
    <subtitle>善终如始。</subtitle>
    <logo>https://courtneychow88.github.io/images/avatar.png</logo>
    <icon>https://courtneychow88.github.io/favicon.ico</icon>
    <rights>All rights reserved 2023, Courtney Chow</rights>
    <entry>
        <title type="html"><![CDATA[活生生的生活和「我做不到」]]></title>
        <id>https://courtneychow88.github.io/post/huo-sheng-sheng-de-sheng-huo-he-wo-zuo-bu-dao/</id>
        <link href="https://courtneychow88.github.io/post/huo-sheng-sheng-de-sheng-huo-he-wo-zuo-bu-dao/">
        </link>
        <updated>2023-06-04T09:36:14.000Z</updated>
        <content type="html"><![CDATA[<p>我们的工作要求人们隐藏情绪，用专业的态度、技术和强大包容的心，去『创造价值』。某种程度，我们还在意员工是不是热爱这份工作。如果正好你热爱技术、热爱设计，那很好，我们有了一种沟通的「Token」（请原谅我用了英文，实在是想不好更好的中文词）。但实际上你是真热爱，还是假热情，人人也说不清。我们总是假设，心里有热爱，在你遇到任何问题，就可以引刃而解、兵来将挡水来土掩，遇神杀神，遇人……呃，咳咳，犯法犯法。</p>
<p>过去的 10 年，正是互联网风头正劲、最好风光的 10年，撒下去任何种子，都能开出灿烂的花。这样的魔力在 22 年突然消失了，现在人们讨论「裁员」、「寒冬」，眼看有些人宴宾客、高楼起、楼塌了。这时候再去看，疯狂、热情、高瞻远瞩没有什么帮助，在大时代下，它垮了，卷下来的不是金粉金沙，而是泥沙俱下。它没有一下子就击垮每个人，而是一点一点的淹没，拽着你下沉。</p>
<p>这时候你再回头谈战略、热爱、专业、强大包容的心，好像都有点可笑。在活生生的生活里，塌楼那一刻逃出来的普通人，谁不是一派劫后余生的唏嘘呢？但是，我们能怎么办？</p>
<p>在这一场游戏里，找个资本家骂一骂好不好？</p>
<blockquote>
<p>不要脸啊！钱果然都让你们赚了！</p>
</blockquote>
<p>要不然，找找当初 PUA 你的那位「领导」？</p>
<blockquote>
<p>不要脸啊！当初就是你骗我上的贼船！</p>
</blockquote>
<p>或者，旁边卷死你的那个同事？</p>
<blockquote>
<p>不要脸啊！就数你最会装模作样！</p>
</blockquote>
<p>但是，在活生生的生活里，怪罪这件事情有用吗？那些所谓的「价值」本身到底是什么？为什么好像我们没有能力「Deliver」，好像在「假忙活一下，摸摸鱼先吧？」</p>
<p>好像，真的是「做不到」。明明好好地放风筝，风筝断线了，在灰色的天幕下，那些聪明、机敏、高瞻、远瞩就是手里的线，缓缓落下。</p>
<p>啰嗦了这么多，最近确实进入「混乱」的阶段，反复寻找答案，而难解其味，每天梳洗整理完毕去工作，就必须百分投入，预备好回答问题。然而，这活生生的生活没有给我任何答案。所幸，就承认自己现在还「做不到」，「不会做」，然后放宽心，去好好做吧。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[为每个人写的产品管理心智模型]]></title>
        <id>https://courtneychow88.github.io/post/mental-modeles-for-pm/</id>
        <link href="https://courtneychow88.github.io/post/mental-modeles-for-pm/">
        </link>
        <updated>2022-02-10T09:50:45.000Z</updated>
        <summary type="html"><![CDATA[<p>Chu 的这篇文章中，每一种心智模型我都曾经应用到金数据的产品规划中。刚开始读觉得「网格」概念很僵硬，不好理解。其实非常像中文中的融会贯通，当你心理有几种思考方式，看到一个问题时，在多个思考方式中切换，寻找能产生最大影响的那一个。经过多次训练之后，就会产生一种直觉：在某个工作阶段应该关注shipping速度，在某个阶段关注「最终完成品」而不是「最轻松的解决方案」</p>
]]></summary>
        <content type="html"><![CDATA[<p>Chu 的这篇文章中，每一种心智模型我都曾经应用到金数据的产品规划中。刚开始读觉得「网格」概念很僵硬，不好理解。其实非常像中文中的融会贯通，当你心理有几种思考方式，看到一个问题时，在多个思考方式中切换，寻找能产生最大影响的那一个。经过多次训练之后，就会产生一种直觉：在某个工作阶段应该关注shipping速度，在某个阶段关注「最终完成品」而不是「最轻松的解决方案」</p>
<!-- more -->
<p>文本出处: <a href="https://blackboxofpm.com/product-management-mental-models-for-everyone-31e7828cb50b">The Blackbox of Product Management</a></p>
<p>心智模型是一种对复杂过程或关系的简单表述。对个人来说，心智模型会随着时间累积，并且帮助每个人更快地做出更好的决定。</p>
<p>举个例子：帕累托原理（the Pareto Principle，译者注：二八原则) 表明80%的产出自20%的工作。</p>
<p>在产品管理的语境下，与其花时间去寻找100%的客户机会，你应该着墨在产生80%机遇的那20%的工作上。产品团队随时都在权衡取舍，结果通常是在发布的功能不支持20%复杂用例的客户。</p>
<p>心智模型很厉害，但它的效果受限于推测的上下文。未解决这个问题，你不应该只依赖于一个或几个模型，而是持续构建一个心智模型网格，以便于能够更好地做决策。</p>
<p>Charlie Munger（Berkshire Hathaway 副主席） 曾在一次关于如何增强智慧的演讲中，普及这个概念。</p>
<blockquote>
<p><em>什么是基础的、普世智慧？第一个规则是，如果你只是记住一些独立事实，尝试将他们挨个突破，你不可能学会任何东西。如果这些事实不是组合在网格理论上，那么你就没有可用的形态。<br>
你得在脑海中有模型。然后再网格中布置这些模型，不管是直接地还是间接地。你可能留意到某些学生，只是直接记忆然后回想自己记住了什么。他们不管在学习还是生活中都很失败。你必须得把脑中的模型在网格上组织起来。<br>
什么是模型？首先你得有多个模型。因为如果你只用一两个模型，那依赖人类的天性，你将会扭曲现实使其适合你自己的模型，或至少你自己这么想的。<br>
常言道：「拿着锤子找钉子。」...... 但这是一种灾难式的思考方式，也是一种灾难式的在世界上运转的方式。所以你必须得有多个模型。</em></p>
</blockquote>
<p>本文概述了部分在我的产品管理职业生涯中非常有用的模型。如果我学习到了新的模型， 也将持续在本文更新。</p>
<p>本文也不仅面向产品经理，而是面向产品团队中的所有人。产品思维并不是PM的权利，实际上在builders的受众，它会更有用。</p>
<p>我们将会讨论一下几个方面的心智模型：</p>
<ol>
<li>资源投入</li>
<li>设计和范围界定</li>
<li>构建和迭代</li>
</ol>
<h1 id="资源投入">资源投入</h1>
<p>接下来的一组心智模型有利于帮你思考：决策团队构建什么内容，或「在哪里投入资源」</p>
<h2 id="投资回报roi">投资回报（RoI)</h2>
<p>一个财务概念：每一块花出去的钱，能挣多少钱回来？在产品领域，将团队所有用的资源（钱、时间、人）视为投资，将对用户的影响视为回报。</p>
<figure data-type="image" tabindex="1"><img src="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/a129d7af-86c9-4fd8-85d8-90fab187486e/Untitled.png" alt="Untitled" loading="lazy"></figure>
<h3 id="这个模型为什么有用">这个模型为什么有用？</h3>
<p>对产品团队来说，可用的资源是时间、钱、人（人数，以及拥有的技能）。当你在考虑多个项目的可能性时，永远选择那个会产生最大影响的项目。</p>
<h2 id="交付的时间价值">交付的时间价值</h2>
<p>早交付比晚交付更能对客户产生更大价值。</p>
<figure data-type="image" tabindex="2"><img src="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/b62cc0a8-f6ef-4f2c-b8a2-e80b8f040cb2/Untitled.png" alt="Untitled" loading="lazy"></figure>
<h3 id="这个模型为什么有用-2">这个模型为什么有用？</h3>
<p>在决定解决哪些问题或者选择机会时，你不能只比较功能特性。（只考虑功能时，产品团队永远只会考虑那个最大的feature）</p>
<p>反之，为了做更好的投资决策，你应该考虑交付速度，并且在哪些能够快速交付的功能中投入更多资源。</p>
<h2 id="时间轴">时间轴</h2>
<p>和[交付的时间价值]相关，正确的投资决策与你引入的时间范围相关。例如在下图中，长时间来看，花3个月和9个月的成本区别不大。</p>
<figure data-type="image" tabindex="3"><img src="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/744cfb29-5882-4d6d-a9f8-81be64a463c8/Untitled.png" alt="Untitled" loading="lazy"></figure>
<h3 id="这个模型为什么有用-3">这个模型为什么有用？</h3>
<p>选择「我们如何在未来3个月创造更大价值？」或「我们如何在未来3年创建更大价值？」会带来全然不同的结果，也会导致团队采取不同策略。<br>
因此，和团队以及利益相关方对于时间范围保持一致，是首要讨论的问题。</p>
<h2 id="期望值">期望值</h2>
<p>预测未来是不完美的。相反，所有决策都会带来产出多种结果可能性。这些结果的可能性加权在一起就是决策的期望值。</p>
<figure data-type="image" tabindex="4"><img src="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/f6e95f47-1008-4572-9ca2-a3945e837517/Untitled.png" alt="Untitled" loading="lazy"></figure>
<h3 id="这个模型为什么有用-4">这个模型为什么有用？</h3>
<p>考虑项目的最终影响时，列出所有可能的结果，并为每个结果分配概率。结果可变性通常包括项目可能比预期更长的概率，以及未能解决客户问题的概率。<br>
一旦你列出所有结果，为结果的价值进行概率权重求和，你会对投资汇报有更好的感觉。</p>
<h1 id="设计和范围界定">设计和范围界定</h1>
<p>当投资方向确定后，下一组有用的模型关于产品设计和设计范围界定。</p>
<h2 id="倒推工作-倒置工作流程">倒推工作 （倒置工作流程）</h2>
<p>不同于「找到问题，思考解决方案」的工作方式。你可以从完美的解决方案开始倒推回当前日期，找到从哪里开始工作。</p>
<figure data-type="image" tabindex="5"><img src="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/afcaf849-dc85-4c83-a54c-4d1a02f8cd82/Untitled.png" alt="Untitled" loading="lazy"></figure>
<h3 id="这个模型为什么有用-5">这个模型为什么有用？</h3>
<p>大部分团队「向前工作」，这是一种评估实现最终影响的成本，然后决定要优化什么实际内容的工作方式。</p>
<p>「倒推工作」让你可以专注于对客户来说，最有影响力，最长期的的工作内容，因为你在从一个完美的解决方案出发，实施逆向工程。</p>
<p>只关注逆向工程并不总是最好的，它只是提供了不同的视角。能从两种视角进行规划是更好的。</p>
<blockquote>
<p>这几乎是金数据产品设计团队最流行的一种工作方式，我们总是设计一个完整的方案，然后从方案或时间倒退，找到工作的着手点。</p>
</blockquote>
<h2 id="信心决定速度和质量">信心决定速度和质量</h2>
<p>你的信心 i) 当前手上问题的重要程度，以及 ii) 解决方案的正确程度，共同决定产品和质量的平衡。</p>
<figure data-type="image" tabindex="6"><img src="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/ba98e0a7-e5cb-4109-82f5-163ac5e92de8/Untitled.png" alt="Untitled" loading="lazy"></figure>
<h3 id="这个模型为什么有用-6">这个模型为什么有用？</h3>
<p>这个心智模型，帮助你建起一个权衡速度与时间的晴雨表。上图中极端的两级，可以很容易地理解。</p>
<p>右侧：你非常有信心，当前正在解决的问题对客户来说是最重要的（已通过客户进行验证），同时你清楚要做什么去解决这个问题。这种情况，你不应该走任何捷径。因为你明确客户长期需要这个功能，所以它应该质量非常好.(eg, 有可扩展性，是设计愉悦的）</p>
<p>左侧：你尚未验证这些内容对客户的重要性。在这个场景下，你花越多的时间构建，就承担了更多的风险，你在为可能都不存在的问题做功能。因此，你应该尽可能快地发布一些东西（哪怕是错误的），去验证它是否值得投入精力构建。例如，为一些不存在的功能做landing page，已验证客户是否感兴趣。</p>
<blockquote>
<p>大部分人都知道MVP的重要性，但是对看好功能的重仓投资，其实是一线产品经理忽视的。</p>
</blockquote>
<h2 id="解决整体用户体验">解决整体用户体验</h2>
<p>用户体验并非止步于界面。在使用产品前后发生的所有事情，都值得被好好设计。</p>
<figure data-type="image" tabindex="7"><img src="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/51da60a4-18a5-4753-8aad-1e7697b0e1d5/Untitled.png" alt="Untitled" loading="lazy"></figure>
<h3 id="这个模型为什么有用-7">这个模型为什么有用？</h3>
<p>设计产品时，我们倾向于关注在产品内的体验（e.g. 软件内的用户界面）。</p>
<p>与之同样重要的是设计市场体验（如何获取客户，以及在客户试用产品之前管理他们的预期），产品支持/遇险体验（当产品表现不及预期时，你的团队/公司如何响应客户）。</p>
<p>特别是极致优秀的产品遇险体验，是一种赢得长期客户新人的好机会。例如，亚马逊的退货服务，赢得了如你我一样的客户信任。</p>
<blockquote>
<p>电商零售的实践是无理由的退换货服务；海外某些Saas产品也 follow 随时退订/解绑卡片的逻辑。</p>
</blockquote>
<h2 id="实验-单一特性-平台">实验、单一特性、平台</h2>
<p>有3中产品开发的模式：实验式、单一特性式、平台功能式。每一种都有其目标以及权衡速度与质量的方式。</p>
<figure data-type="image" tabindex="8"><img src="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/1711be8c-60bd-4192-b32f-ed603c751e4f/Untitled.png" alt="Untitled" loading="lazy"></figure>
<h3 id="这个模型为什么有用-8">这个模型为什么有用？</h3>
<p>先识别出你的产品是哪种开发方式，你能更清晰地定义清楚目标以及正确权衡时间和质量之间的平衡。</p>
<p>实验是为「学习/了解信息」而存在的，因此你可以在新功能或新平台上发布，让用户验证。如果你的目的是为了获取更多信息，你可以做更多不那么精致的事情：为了更快实现，用更hack的实现；伪装自己产品非常复杂，实际上背后是手工操作。</p>
<p>与实验不同的是，平台类特性是永存的。其他人会基于平台产品构建功能，因此平台产品上线后再修改是极具破坏性的。</p>
<p>因此，平台必须具有非常高的质量（e.g. 稳定性、高性能、高可扩展性等等），同时具备真正有用的功能。一个构建平台产品的好原则是：和你的第一个客户一起来做。比如说，另外一个在你的平台之上构建产品的团队。这样一来，你必须得保证你的平台对客户是随时可用的。</p>
<h2 id="反馈环">反馈环</h2>
<p>产品中的因果关系是正反馈&amp;负反馈回路环环相扣的结果。</p>
<figure data-type="image" tabindex="9"><img src="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/481f1d4f-2d81-4141-97d4-3081bf251129/Untitled.png" alt="Untitled" loading="lazy"></figure>
<h3 id="这个模型为什么有用-9">这个模型为什么有用？</h3>
<p>反馈回路告诉我们，产品增长和衰退的最大驱动因素可能来自产品中的其他部分。</p>
<p>举个例子，你的团队是支付团队，KPI是产生更多的信用卡支付流程。你可以从用户获取团队得到正反馈，更多的新用户带来更多可能舒勇信用卡付费的客户。然而你会从现金支付团队得到一个负反馈，他们的KPI是帮客户更容易地进行现金结算。</p>
<p>了解这些反馈回路有助于使用更正确的策略（e.g. 你可以在获取新用户时采用通用的拉新策略，以增长总支付单数），或了解当前产品监控指标中的负面因素(e.g. 信用卡支付单数下降，是因为现金交易团队做的非常好，而不是因为信用卡团队很糟糕）</p>
<h2 id="飞轮递归反馈回路">飞轮（递归反馈回路）</h2>
<p>正、负反馈由自己产生，并由自己加速驱动整个过程。</p>
<figure data-type="image" tabindex="10"><img src="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/887e6fe8-9acf-49cf-b690-9487afce63b2/Untitled.png" alt="Untitled" loading="lazy"></figure>
<h3 id="这个模型为什么有用-10">这个模型为什么有用？</h3>
<p>飞轮的概念与反馈环相关，在管理平台产品或交易市场类产品时更加重要。例如，设想你是Apple iOS APP市场的管理者，你有两类用户：开发者和APP用户。</p>
<p>飞轮效应体现为：更多的用户吸引了更多的开发者（有机会售卖自己的APP），反过来更多的开发者（做了更多应用）吸引更多APP用户（可以消费更多类型的应用）， 因此又吸引了更多的开发者，循环往复。只要你持续运转飞轮，你不仅仅是增长，而是在飞速增长。</p>
<p>如果你在管理者一个飞轮，你得确保让它在正确的方向上转，因为它反着转的影响也非常强大。例如，市场上应用太多，新用户不容易被用户发现，开发者的增长会减速，从而破坏飞轮效应。</p>
<h1 id="构建和迭代">构建和迭代</h1>
<p>当你在构建、运营、迭代已有产品时，以下这组心智模型对你有帮助。</p>
<h2 id="收益递减">收益递减</h2>
<p>当你关注于提升同一个产品领域时，单位投入产生的用户价值会随着时间递减。</p>
<figure data-type="image" tabindex="11"><img src="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/5c72f444-3ca7-4a0d-b067-7e1f8b6cef48/Untitled.png" alt="Untitled" loading="lazy"></figure>
<h3 id="这个模型为什么有用-11">这个模型为什么有用？</h3>
<p>假设你和团队基于用户反馈对产品进行日常迭代，你最终会进入一个阶段：你怎么做都不可能做的更好了。这个时候，你和团队就改去发现一些新东西。</p>
<h2 id="局部最大值">局部最大值</h2>
<p>与收益递减相关，局部最大化是指当渐进式的产品优化无法创造更多的用户价值，迫使你在产品上做出进一步的改变。</p>
<figure data-type="image" tabindex="12"><img src="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/3e47c8c3-7291-4751-a26a-b4a00021748a/Untitled.png" alt="Untitled" loading="lazy"></figure>
<h3 id="这个模型为什么有用-12">这个模型为什么有用？</h3>
<p>这个模型与收益递减模型高度相关，特指做任何改进都不会带来更多收益。迭代已经没有任何意义，唯一的出路就是产品创新。</p>
<p>这个概念最近 因为 Eugene Wei的文章《看不见的渐近线》而产生病毒式的传播，文中讲述了一个例子：亚马逊 foresaw 演变为 Prime的故事。</p>
<h2 id="20-版本是骗人的">2.0 版本是骗人的</h2>
<p>创造一个产品时，不要觉得2.0版本一定会发布。把1.0做完整，因为它可能是最后一个版本。</p>
<h3 id="这个模型为什么有用-13">这个模型为什么有用？</h3>
<p>当定义1.0版本时，你会记录所有酷炫的，可以加在2.0版本中的feature。 但是你得承认，未来的版本可能永远都不会发布。因为你不清楚发布当前版本后会发生什么：公司策略可能会变化，你的Tech lead离职，或者全团队整个转向其他项目。</p>
<p>对了应对这些场景，你得确保交付的是一个「完整产品」，即便永远不迭代，在可见的未来里，产品对用户来说都是有用的。不要想着未来可以优化，当前就发布了一个可能没法完整解决问题的产品。</p>
<h2 id="freeroll">Freeroll！</h2>
<p>快速交付某些功能不会带来任何负面影响，还有可能会带来收益。</p>
<blockquote>
<p>Freeroll 是扑克游戏里的一种玩法，玩家可以免费丢一次骰子</p>
</blockquote>
<figure data-type="image" tabindex="13"><img src="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/eaf16b04-f91f-4003-b27e-73d935ff5f14/Untitled.png" alt="Untitled" loading="lazy"></figure>
<h3 id="这个模型为什么有用-14">这个模型为什么有用？</h3>
<p>如果当前用户体验非常差，任何根据直觉做的产品优化都会让情况变得更好。这种情况下做的改变就被称为Freeroll。和修复缺陷不一样，因为bug通常意味着某个功能没有按照设计预期工作。</p>
<blockquote>
<p>这没啥意思，我们得咋能让自己陷入这种僵局呢...我就懒得翻译后一句了。</p>
</blockquote>
<h2 id="大部分价值在10版本之后产生">大部分价值在1.0版本之后产生</h2>
<p>发布产品之后，你会从用户身上学到很多。不要浪费利用这些知识迭代产品的机会。</p>
<figure data-type="image" tabindex="14"><img src="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/dcfaee20-63fd-4c79-9d15-0a0b90fcb53d/Untitled.png" alt="Untitled" loading="lazy"></figure>
<h3 id="这个模型为什么有用-15">这个模型为什么有用？</h3>
<p>知道用户开始使用产品，产品的一切都是基于假设来创建的。即便你的团队做了足够的「pre-launch 测试」，比方说：客户访谈、原型测试、定量分析、beta 版本测试，当产品100%开放后，仍然有一些意料外的行为或边界场景会发生。</p>
<blockquote>
<p>所以产品要持续改进！</p>
</blockquote>
<h2 id="关键失败指标-key-failure-indicator">关键失败指标 （Key Failure Indicator)</h2>
<p>和KPI一起来看KFI，列出任何情况下你都不能出错的指标，确保团队关注在健康的增长曲线。</p>
<figure data-type="image" tabindex="15"><img src="https://s3-us-west-2.amazonaws.com/secure.notion-static.com/a89554c9-5795-41f2-8bd1-8c1e2a6e2982/Untitled.png" alt="Untitled" loading="lazy"></figure>
<h3 id="这个模型为什么有用-16">这个模型为什么有用？</h3>
<p>团队通常只围绕KPI去构建，而忽略了KPI带来的负面效应。<br>
一个经典的案例是：在登录页面上提升注册转化率，但没有关注到总客户数没有增长（发现的时候已经晚了），因为登录转化率下降了60%。这些都出自于同一次改动。</p>
<p>KFI在这时会确保你的团队只围绕着健康的产出工作（例如，列出登录转化率不可以下降）</p>
<p><strong>一些 KPI/KFI  例子：</strong></p>
<ol>
<li>在保持利润的同时增长收入</li>
<li>在保持feature B的使用率的情况下，增长feature A的使用率</li>
<li>在不增加服务团队工作量的情况下增加feature A的使用率</li>
</ol>
<h1 id="一个网格系统而不是清单">一个网格系统，而不是清单</h1>
<p>这句话可能会让一些人不满意：目前据我所知没有任何一种方法可以告诉你如何使用这些心智模型。假如你试图将其视作一个清单，最终结局是你做了一些心理训练，搞得自己和团队都非常难受。</p>
<p>相反，它们只是你决策网格中的一部分，帮你做出更好的产品决策，是你向团队解释沟通决策来源的工具。</p>
<p>随着你累积更多的模型，最好是通过经验来累积，你会越来越擅长此道。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[卡片盒笔记工作法初探]]></title>
        <id>https://courtneychow88.github.io/post/slip-box-note-taking/</id>
        <link href="https://courtneychow88.github.io/post/slip-box-note-taking/">
        </link>
        <updated>2021-11-09T05:12:58.000Z</updated>
        <summary type="html"><![CDATA[<p>本文是10月22日成都线下活动「不颓废青年Up指南」中，我的分享的文字稿。</p>
]]></summary>
        <content type="html"><![CDATA[<p>本文是10月22日成都线下活动「不颓废青年Up指南」中，我的分享的文字稿。</p>
<!-- more -->
<h1 id="卡片盒笔记工作法">卡片盒笔记工作法</h1>
<p>大家好，我叫周旖，是一家在线数据收集工具，金数据，的产品经理。作为产品经理，我每天都会处理非常大量的信息。这些信息可能是团队的设计方案、客户访谈、新技术趋势和行业调查。记录笔记，几乎是我赖以生存的技能，我时长在想，我要是没有手机的话，应该可活下去，这玩意买一个新的就行了。但是，离开我电脑里的笔记，我肯定没办法正常生活和工作。</p>
<h1 id="笔记为什么那么重要">笔记为什么那么重要</h1>
<p>当然会有人也问这个问题，为什么笔记非常重要？我不记笔记不也工作生活地好好的吗？当然当然，如果你有一目十行过目不忘的能力，也许你完全不需要笔记，只靠一张嘴就可以制霸天下。但是我没有，我相信大部分的人和我一样都没有这样的能力。所以我们需要一种机制或方法，能够帮助我们的大脑更好地记忆、内化、学习，而不是阻碍我们的工作。</p>
<h1 id="那我们正确地记笔记了吗">那我们正确地记笔记了吗？</h1>
<p>不管你是跟我原来一样，使用纸笔拼命地写，which 只让我得到了一个手指上的结巴。还是像其他人一样，使用电脑来记笔记。恐怕，最终你得到的结果是这样的（乱七八糟的文件夹）。<br>
这个界面熟悉吗？（笑）<br>
<img src="https://courtneychow88.github.io/post-images/1636441770932.png" alt="" loading="lazy"></p>
<h1 id="文件夹就像一个黑洞">文件夹就像一个黑洞</h1>
<p>文件夹就像一个黑洞一样，把我们的思考、想法吸进去，再也不吐出来。大家对这个场景应该很熟悉吧：打开一个叫做笔记的应用或者文件夹，里面躺满了命名很可疑的文件。然后你充满怀疑地点击一个文件：里面写了两个字。<br>
<img src="https://courtneychow88.github.io/post-images/1636441807382.png" alt="" loading="lazy"></p>
<h1 id="单一笔记是不可靠的">单一笔记，是不可靠的</h1>
<p>大家有没有过这种体验。你正在读一本书，书里提到一个新的概念。这个时候你灵光一闪，「哦，我曾经在另外一本书里看到过这观点。」但是，你打死也想不起来那本书是什么。<br>
或者，你写下这样一个卡片，但是，过了一年你在某个地方翻出来这张纸。你完全不知道当时是为什么写下这个东西了。<br>
<img src="https://courtneychow88.github.io/post-images/1636441817652.png" alt="" loading="lazy"><br>
所以，让我们来换一个更性感的标题</p>
<h1 id="当-知识工作者-在谈论效率的时候我们在谈论什么">当 知识工作者 在谈论效率的时候，我们在谈论什么？</h1>
<p>我得问一下，现场没有靠纯体力劳动工作的人吧？那各位，我们都是知识工作者。我们赖以生存的基本技能是知识带来我们的，我们的主要生产材料，就是知识本身。我们利用已有的，或者新学习的信息和只是，参与生产和分发知识产品的工作链。</p>
<p>在当下这个信息爆炸的时期，我们根本就不缺信息。我们缺乏的是，如何在非结构化的工作流程中，高效累积有用的知识，同时在你需要他的时候，能够随时随地在你的数据库（大脑）里调用它。</p>
<p>这几乎是不可能的事情，因为人的大脑不会记住所有的事情。如果没有有效的策略，那我们刚刚提到的脏笔记和想不起来事儿，就会重复发生，永无止境。<br>
<img src="https://courtneychow88.github.io/post-images/1636441824293.png" alt="" loading="lazy"><br>
所以，我向大家介绍一个我最近开始研究的新策略。</p>
<h1 id="卡片盒笔记">卡片盒笔记</h1>
<p>德国的一名社会学家卢曼发明了一套笔记策略。简单来说，卡片盒笔记法，就是把一个想法写在一张卡片上，然后放到盒子里，卡片与卡片之间有一套编号紧密地联系起来。<br>
<img src="https://courtneychow88.github.io/post-images/1636441860270.png" alt="" loading="lazy"><br>
卢曼为自己打造了这个卡片盒柜子，他把这个柜子比喻成他最好的伙伴。同时，他利用卡片盒的魔力，在一生中创造了90000张卡片，并且用他们组合粘贴，写出了70余本书。我在过去是不那么在意笔记应该怎么记的，总觉得文档写的好才是最重要。长时间对笔记策略的忽视，产生了非常爆炸的结果：我发现时间一长，曾经学习过的内容没有转化成我的知识，要用到的时候还得重来一遍。又或者是，我看过的一本很重要的书，根本不记得作者基础论述的观点和依据。</p>
<h1 id="好的笔记是什么">好的笔记是什么？</h1>
<ul>
<li>是一种思考工具</li>
<li>是思维网络，可靠、牢固</li>
<li>捕获灵感的网</li>
</ul>
<h1 id="这个策略的好处是">这个策略的好处是？</h1>
<p>卡片盒笔记方法，或者是笔记策略。就是为了解决如何将信息累积成知识的目的产生的。</p>
<ul>
<li>更好地学习和搜集新信息</li>
<li>更好地提取曾学过的知识</li>
</ul>
<p>就像任何新游戏一样，你需要严格的训练自己。直到如何发出技能变成一种肌肉记忆。所以，让我们来看看这个游戏的规则是什么</p>
<h1 id="写好笔记的原则">写好笔记的原则</h1>
<ul>
<li>
<p>一篇笔记是一个原子(Atom)：我们在一篇笔记中只说一个概念。它必须是完整的想法/思考/结论。当有任何新概念出现，你觉得这个新概念也需要写出来，新开一篇笔记。这样你就可以保证每个笔记篇幅的大小合适，内容也是完整的。当你在组合粘贴这些笔记的时候，他们是完全可以重用的。</p>
</li>
<li>
<p>笔记之间应该有非常紧密地双向链接。原子化保证了每个笔记在被关联的时候，都是可以被重用的。紧密链接的原则，让我们在写一篇笔记的时候，都仔细斟酌这个笔记和我之前思考过的内容有没有联系。当你做了非常多的双向关联时，你会发现你可以在思维的网络里快速导航。</p>
</li>
<li>
<p>笔记应该是概念为导向。我们应该每写一篇笔记，都只描述一个概念。我们不应该用人名、书名、作者或者是公司等内容作为笔记构建的主要内容。随着一个概念研究的深入，你会发现以上的内容很多时候会穿插在一个或多个概念里。这是我目前发现倒数第二难的原则。</p>
</li>
<li>
<p>最后一个，也是最难的一个。笔记的中心地位，是你自己的想法，而不是重复别人的说法。当我们在写读书笔记的时候，这个最明显不过了。我们经常都摘抄原作者的话，我们通常以为写一遍之后这个知识就是自己的了。但是现实总是打我的脸。只有经过自己思考，重述和总结的内容才是自己的。随时随时都要保持说你自己的话，这样使你的思考和创作都更有说服力。</p>
</li>
</ul>
<h1 id="我用这个策略做了些什么">我用这个策略做了些什么</h1>
<p>最近几个月，我所有新的笔记都采用了这个策略。得到了这样一个网络图。<br>
这中间的每一个点，就是一个单独笔记，每一个笔记都和其他笔记联系起来，当然也有一些完全不关联的孤儿。<br>
<img src="https://courtneychow88.github.io/post-images/1636441888724.png" alt="" loading="lazy"></p>
<h1 id="如何开始">如何开始：</h1>
<p>寻找能够以你的思维方式看待世界的工作工具，并随着时间的推移与您一起成长的工具</p>
<h1 id="推荐">推荐</h1>
<ul>
<li>Obsidian</li>
<li>Roam Research</li>
<li>Flomo笔记</li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[如何保持独立思考]]></title>
        <id>https://courtneychow88.github.io/post/think/</id>
        <link href="https://courtneychow88.github.io/post/think/">
        </link>
        <updated>2021-10-28T07:12:59.000Z</updated>
        <summary type="html"><![CDATA[<p>这篇文章受到 <a href="http://www.paulgraham.com/bio.html">Paul Graham</a>的一篇文章：<a href="http://www.paulgraham.com/think.html"><em>How to Think for Yourself</em></a>的启发。</p>
]]></summary>
        <content type="html"><![CDATA[<p>这篇文章受到 <a href="http://www.paulgraham.com/bio.html">Paul Graham</a>的一篇文章：<a href="http://www.paulgraham.com/think.html"><em>How to Think for Yourself</em></a>的启发。</p>
<!-- more -->
<p>商业产品经理或企业级软件产品经理通常必须超越平均水平。想一下，一帮刚毕业两三年的小毛孩儿，连资产负债表都没搞清楚，就一头扎进了企业软件开发的浪潮，开始为一群工作流程非常成熟的职场人群设计工具。C端产品经理相对更好入门，因为通常经验主义引导我们所有知识都源于某些经验，在某些领域中，足够的观察力和耐心，多少会让你得出表现不错的产品方案。企业级软件的复杂程度，显然超出了初级产品经理的想象。一个化学制剂厂会有什么数据在流转？或者是教培机构的销售在获客后，如何把商机转化为线索？这种无法体验的业务流程，阻挡了产品的创造力。当然我也听到过很多人说：无所谓啊，找市面上成熟的产品看一下不就完了。且不说市面上成熟的产品是不是Saas产品，你有没有机会打开盒子一探究竟。即便是打开了盒子，你也很难真的知其所以然。</p>
<p>独立思考在商业产品经理的成长中非常重要，因为同伴们期待着你的工作不但要正确，还得有创新。抛开产品应该做什么不谈，成熟的商业产品经理需要知道不做什么。我们的工作会经常充满各种声音：老板的决策、一线销售的反馈、KA客户的需求、客服团队的抱怨。如果产品的思考不充分，产品就被各种声音拉扯着，偏离创新的轨道。</p>
<p>Paul Grahma 的文章里提到的场景在工作里也很常见：</p>
<blockquote>
<p>在工作场景里有一种类似达克效应的现象：最传统的人觉得自己很自信，并且自认为非常有独立思考的能力。但是，拥有独立思考能力的人，觉得自己思考的不够独立。</p>
</blockquote>
<p>我们有可能去培养自己的独立能力吗？Paul认为有的（虽然他认为独立思考是天生而不是后天培养的，笑）：</p>
<ul>
<li>稍微少注意一些传统信念/想法。（如果你不知道规矩是什么，你就不会变成一个循规蹈矩的人。废话哲学天才！）</li>
<li>多和思考比较独立的人待在一起，有一两个思维比较独立的朋友，能和他们经常交谈</li>
<li>多接触陌生人，比如出去旅行可能会带来非常不一样的交谈体验</li>
<li>阅读历史：并不只是为了解发生过什么而读历史，你应该更多地去体验哪些人当时在想什么</li>
<li>培养怀疑精神：当你听到某个人在说什么的时候，停下来多问问自己：这是真的吗？像研究一个谜题一样研究它。那时候你会觉得有些最开始觉得可以接受的说法变得很可疑。重点不是要找出漏洞，而是发现被脆弱想法掩盖的新想法。</li>
<li>进入你大脑的所有想法都应该被仔细审查！往后退一点，再仔细观察一下。（一些强大的影响是隐形的！想想你是怎么被牵着鼻子走的。前几年流行社交健身，这几年no code或者low code就像潮水一样席卷了企业服务的领域， 是个产品都要往上靠。）</li>
</ul>
<p>独立思考由三个部分紧密地组成：<br>
<img src="https://courtneychow88.github.io/post-images/1635405213228.png" alt="" loading="lazy"></p>
<p>最让我觉得有意思的就是保持怀疑，持续解谜这个议题。我们时常听到太多的说法和建议，比如说你的产品应该坚持哪种路线；某某产品形态一定会成功的，这已经被某某实践过了；投资人会蛊惑你：我们最近看到xxx方向蛮好的。无数的人都会尝试要说服你。</p>
<p>我非常赞同<a href="https://www.notion.so/2da40e536efe47e785b6ee79125f78a4">刘少楠的想法—— 这种追随策略是无用的</a> 。当然你跟其他人解释这个说法也是徒劳的：他们又不对结果负责，张嘴说是最容易的。</p>
<p>投身在企业级产品的浪潮中，保持清醒是一种必要的坚持和刻苦训练的日常。培养对真理的虔诚心，随时保持怀疑，持续解题，跟着好奇心，去做让你自己好奇的事情。总有一天，你会发现你超越了身边80%的人，保持了一颗能量棒超级大的心脏。（当然，但愿，你做出了好产品！笑。）</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[保持脆弱]]></title>
        <id>https://courtneychow88.github.io/post/stay-vulnerability/</id>
        <link href="https://courtneychow88.github.io/post/stay-vulnerability/">
        </link>
        <updated>2021-08-12T10:46:17.000Z</updated>
        <summary type="html"><![CDATA[<p>剑拔弩张的沟通或者是过度表达，在产品这个角色上占了更大的比例。倾听和接受反而变成了一种稀有的品质。保持脆弱，让我们离这个世界更近一点。</p>
]]></summary>
        <content type="html"><![CDATA[<p>剑拔弩张的沟通或者是过度表达，在产品这个角色上占了更大的比例。倾听和接受反而变成了一种稀有的品质。保持脆弱，让我们离这个世界更近一点。</p>
<!-- more -->
<p>前段时间有客户来询，于是与Sales和他们约了一个会，主题很宽泛：“告诉我们你们能做点啥？” 会议开始之前，我把SDK环境准备好，准备了一个流程向对方展示，我把问题都列在一张纸上，自以为自己准备的挺充分。</p>
<p>开始之前对方告诉我们，对方也把自己的产品总监约上，一起来听。会议开始了，我开始共享屏幕并且按照一张纸一条一条地把我准备好的流程进行演示，自觉非常完整。罢了，对方商务表示没有其他问题。产品总监登场：“啊，感谢周老师为我们演示。我理解这个问题你们一定做的非常好的，但是我还是有一个问题，你们的SDK是怎么集成的？” 我怒从中来：合着我说了半个小时白说了。于是强压住我的白眼，重新打开SDK向其展示。展示毕，双方就对接细节开始沟通。在整个过程中，对方产品总监都在不停打断我，讲述“陈述句”，而我也插入对方的表述，向其解释细节（此处打断并不是贬义，只是在表达2个产品角色沟通过程中的“交锋”）。同事终于看不下去了，mute电脑后向我吐槽：“你不觉得你们产品经理真的是一模一样的吗，不听对方说话。”</p>
<p>这次电话会议结束后，我大吃一惊：产品角色是不听人话的吗？于是，在后续的时间，我和内外部的产品开会时都暗暗观察，果不其然，大部分人都喜欢说：“说白了就是...”；“这不就是xxx方法？”；“我们能解决这个问题...”</p>
<p>剑拔弩张的沟通或者是过度表达，在产品这个角色上占了更大的比例。倾听和接受反而变成了一种稀有的品质。</p>
<p>几年前，我看过一本书：&quot;Daring Greatly&quot;，作者是美国休斯敦大学的社会工作学教授，Brené Brown。全书在讲Vulnerability（脆弱性）的力量，Brown的观点是，要获得幸福，与他人搭建有建设性关系，需要允许其他人看见真实的自己，建立接受被他人伤害的勇气。</p>
<p>任何做产品相关角色的人都应该多一点脆弱，少一些防御。脆弱是创造力的来源，脆弱允许你观察和询问周遭的世界，面对你害怕的事情，学会理解其他人的挣扎，并且利用内化后的能力创造一些正向价值的结果。</p>
<p>这意味着得放下所有的防御，承认世界上有我们不了解、解决不了的问题，但是去直面和拥抱这些问题。通过别人的眼睛，看到更大的现实世界，感受他们的痛苦和快乐。当我们定位到问题，再想办法去为了「人」去解决问题，创造新价值和体验，即便面对这些问题的过程其实非常痛苦。</p>
<p>Brown 在Facebook上发post说，Vulnerability 是对勇气最精确的描述，因为勇气(Courage)的词根是&quot;cor&quot;, 在拉丁文中是“心”（heart），courage的原始释义是“全心全意讲述你自己的故事。”（“To speak one's mind by telling all one's heart.”）</p>
<p>朋友，保持脆弱，保持勇气。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[读《读库》2021]]></title>
        <id>https://courtneychow88.github.io/post/du-lesslessdu-ku-greatergreater-2021/</id>
        <link href="https://courtneychow88.github.io/post/du-lesslessdu-ku-greatergreater-2021/">
        </link>
        <updated>2021-04-14T15:05:30.000Z</updated>
        <summary type="html"><![CDATA[<p>读库最新的版本2100期，开篇就是对谈实录。</p>
]]></summary>
        <content type="html"><![CDATA[<p>读库最新的版本2100期，开篇就是对谈实录。</p>
<!-- more -->
<p>我打开的时候是躺在床上，睡觉之前，越看越觉得丧。「妈呀，六叔叔去上了商学院是不一样。我现在连睡觉之前都要看工作的事儿啦？」</p>
<p>吐槽完毕把书一丢睡觉去。后来还是觉得这期只适合在办公室看，揣在兜里随时共鸣一下。</p>
<p>六叔手记「读库生于出版，但不能死于出版」,坦陈自己的智慧一定说不出这样高深的话，肯定假借他人之口。<br>
没有智慧如我，肯定是说不出来这句话的。</p>
<p>六叔有一个打算出书的系列文章：36岁必死。说的是一个人不管如何，在36岁上下时一定得经历一次「死亡」。过去的一切死掉，生长出来新的。一个人工作久了想必很容易进入所谓的倦怠时期，甚至有专门的英文单词来形容这种感受：Work Burnout. 日复一日重复繁重的工作，燃尽一个人的肉身。Burning out。</p>
<p>如果没经历过36岁上下的死亡，Burning过去就只剩下尸骸，只是活着行走罢了。4月的时候回到出生长大的厂区逛了一圈，看到小学初中在滚滚的基建浪潮之中被夷为平地，架起高桥，工地守门的大爷是爸爸年轻时的工友同事。我想他也经历过36岁的死亡，但是剩下的只是行走罢了。</p>
<p>画面徒然有声，是以记之。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[夜航船]]></title>
        <id>https://courtneychow88.github.io/post/ye-hang-chuan/</id>
        <link href="https://courtneychow88.github.io/post/ye-hang-chuan/">
        </link>
        <updated>2020-09-03T10:55:33.000Z</updated>
        <summary type="html"><![CDATA[<p>张岱在一本小书《夜航船》里说过，天下学问，唯夜航船最难对付。</p>
]]></summary>
        <content type="html"><![CDATA[<p>张岱在一本小书《夜航船》里说过，天下学问，唯夜航船最难对付。</p>
<!-- more -->
<p>这里有个故事：</p>
<blockquote>
<p>昔日有一僧人与一士子同宿夜航船。士子高谈阔论，僧畏慑，弮足而寝。僧人听其语有破绽，乃曰：“请问相公，澹台灭明是一个人、两个人?”士子曰：“是两个人”。僧曰：“这等尧舜是一个人、两个人?”士子曰：“自然是一个人!”僧乃笑曰：“这等说来，且待小僧伸伸脚。”</p>
</blockquote>
<p>士子凑了个没趣，僧人才得以伸了伸脚。所以张岱写了一本书，书中及其可能搜罗了一堆三教九流的神仙鬼怪名词，逐一作解，以免后来士子与人夜航，高谈阔论惹人嘲。</p>
<p>我和朋友们一度也是喜欢自诩读书人，举个例子：</p>
<blockquote>
<p>Luka说：我当年和xxx的在一起的时候如何如何？<br>
我：你定义你和xxx之间是什么关系？<br>
Luka：是我的情人啊！<br>
我：那你这个Lover是《面纱》的情人还是《情人》的情人？<br>
俊友：那肯定是《情人》的情人啊！面纱那个强扭的瓜不甜。<br>
然后我们哈哈大笑，为彼此之间的小共鸣而愉快。谁说不是呢？难得遇到天下有这么几个人，难得读书又难得都读了一样的书。</p>
</blockquote>
<p>最近出差的过程中，发现我还挺讨厌夜航船这本书（虽然非常喜欢张岱），士大夫阶层的小情小调。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[我们是怎么做产品的：金数据产品团队的工作手册]]></title>
        <id>https://courtneychow88.github.io/post/how-does-jinshuju-make-product/</id>
        <link href="https://courtneychow88.github.io/post/how-does-jinshuju-make-product/">
        </link>
        <updated>2020-05-25T08:06:42.000Z</updated>
        <summary type="html"><![CDATA[<p>最近在整理工作这些年留下的文字，发现这样一篇工作手册。这个手册是正好是在一段非常艰难的时期产出的。愈是艰难时，愈要珍惜羽毛。</p>
]]></summary>
        <content type="html"><![CDATA[<p>最近在整理工作这些年留下的文字，发现这样一篇工作手册。这个手册是正好是在一段非常艰难的时期产出的。愈是艰难时，愈要珍惜羽毛。</p>
<!-- more -->
<p>产品经理的工作是一门关于设计、业务、沟通的艺术，我们的工作价值是为用户创造可信赖的产品，帮助用户在领域的实现价值。同时，产品经理需要去调用的是各个部门的资源，我们的工作交付物是故事卡，并且随着故事卡的上线去追踪用户是否对功能产生价值认同，以实现产品的商业价值。</p>
<p>一名合格的产品经理，所秉持的标准应该是「一个故事，既能够让业务人员了解如何使用某项功能，也能让设计人员理解业务目的，明确设计标准，同时技术人员能够了解功能业务价值并且有清晰的验收条件进行实施」。</p>
<p>这对任何厂商的产品团队都不是一件容易的事情，冗长的PRD和MRD被我们所唾弃，零散的Stories和验收条件又让开发、测试、设计都面临反复施工的问题。<br>
所以，是时候去设定一个金数据产品团队的标准。让整个业务、产品、设计、开发团队，都能围绕标准来工作，减少冗余信息，提升效率。</p>
<h3 id="统一的交付流程">统一的交付流程</h3>
<p>产品经理要做的事情是让正确的事情持续发生。如何去评价什么事情是正确的，是产品经理团队需要不断磨合，甚至是相互较量的结果。在相互磨合较量的过程中，我们融合每个人的创意，形成统一的价值观，确定我们当前认为最正确的事情。</p>
<p>所谓的统一的交付流程是，当Story分析完成后，产品经理内部需要对该Story进行整体的评估。评估的标准是：</p>
<ol>
<li>这个Story与我们当前最重要的业务目标是否一致？</li>
<li>这个Story的受益者是谁？我们将取得什么收益？</li>
<li>这个Story是否符合基本的交付原则？（价值稳定、交付清晰、逻辑覆盖完整）</li>
</ol>
<h3 id="统一的交付物">统一的交付物</h3>
<figure data-type="image" tabindex="1"><img src="https://courtneychow88.github.io/post-images/1590394066367.png" alt="" loading="lazy"></figure>
<h3 id="沟通">沟通</h3>
<p>沟通是团队黏合在一起的核心，我们因为共同的价值合作，沟通让所有的事情能够朝着既定的目标高效前行。</p>
<ol>
<li>保证沟通是有效的<br>
           不是所有的评审都是有效的，再复杂的Story30分钟内应该也可以沟通完成了。如果超过30分钟都讲不明白一个故事卡，那这个故事卡大概率是不合格的。</li>
</ol>
<p>2.  保证提前准备好沟通的方案，可以节约每个人的时间<br>
没有准备好的会议是不值得开的，请独立保证你的沟通是有效的。</p>
<p>3.  保证各个团队得到的信息的一致的<br>
           每个团队都应该清楚的了解需求背景和业务价值，所以不要畏惧和开发沟通时讨论业务价值，开发团队会因此而觉得更有成就感的。</p>
<ol start="4">
<li>沟通的流程<br>
         产品经理内部评审 -&gt; CS/Sales Showcase / 设计团队kickoff -&gt; 开发团队kickoff -&gt; 已上线功能的定期回溯</li>
</ol>
<p><strong>附：故事卡产出应该符合的标准，INVEST原则</strong></p>
<p>在产品经理内部评审的Story可以是史诗级别的Story。但是当Story交付给设计、开发时，需要遵循INVEST原则对Story进行拆分。</p>
<p>● Independent<br>
每个Story是独立的，相互不依赖的。当Story之间已经出现互相以来，需要对齐进行合并。<br>
● Negotiable<br>
凡事都是可以商量的。<br>
● Valuable <br>
每一个独立的故事卡要交付清晰的价值。<br>
● Estimatable		<br>
          可评估的，如果故事卡太大，无异于不可评估工作量不可评估交付时间不可评估影响。<br>
● Small<br>
小，每个卡要尽可能的小。<br>
● Testable 	<br>
可测试的。可测试需要测试完整的流程，确保每个卡都是可工作的。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[隔绝和独立之路 ，读完《你当像鸟飞往你的山》]]></title>
        <id>https://courtneychow88.github.io/post/educated_review/</id>
        <link href="https://courtneychow88.github.io/post/educated_review/">
        </link>
        <updated>2020-03-19T04:30:13.000Z</updated>
        <summary type="html"><![CDATA[<p>“你当像鸟飞往你的山”，但“你的山”并不是就在那儿，而是，你要去苦苦地寻找，甚至，很长时间里你根本就看不到哪儿有山，你只能懵逼地在半空中乱扑腾，争取不掉到地上。</p>
]]></summary>
        <content type="html"><![CDATA[<p>“你当像鸟飞往你的山”，但“你的山”并不是就在那儿，而是，你要去苦苦地寻找，甚至，很长时间里你根本就看不到哪儿有山，你只能懵逼地在半空中乱扑腾，争取不掉到地上。</p>
<!-- more -->
<p>有些书你好像是无法避免的，我几乎不太主动寻找非虚构文学，值得一读的书，总会通过某种意料之中的形式出现在你的眼前。在几位好友都读完《Educated》后，它出现在我的列表中。(吐槽一下中文名实在是妨碍记忆，为啥不能意译呢？ 《<a href="https://book.douban.com/subject/33440205/">你当像鸟飞往你的山</a> 》)</p>
<p>19年看书不多，因此看的时候本着痛定思痛，痛看几本的态度翻开了此书。，哪想到，结尾时几乎是耐着性子，强忍暴躁，在一个凌晨2点，一口气读完。丢掉Kindle，大呼「太闹心了啊！」</p>
<p>第二天和朋友们讨论，大家纷纷表达了同样的观点：「看得我PTSD都要犯了！」</p>
<p>之前看《乡下人的悲歌》时，产生非常大的同情心，虽然都是彻头彻尾的励志文学，但是和《乡》完全不同的是，看完《Educated》之后不知如何调整情绪面对。</p>
<p>为了让读者能够有背景知识，简单介绍一下全书内容。Tara Westover，出生在一个传统摩门教家庭，她的父母都是极端分子，并且极其不信任政府和公共系统，坚持让全家7个孩子接受家庭教育（homeschool)。全家最重要的事情，就是为1999年的世界末日屯粮做苦工，洗桃子剥桃子煮桃子罐头。如果不是提前预知此书是纪实文学，看到下面这些场景眼珠子都要掉出来了：</p>
<blockquote>
<p>「… 我们在家囤了1200加仑汽油…」<br>
「爸爸被全身烧伤，靠母亲的基础精油和顺势疗法活了下来…」<br>
「全家小孩在父亲的废料厂做工，但是由于操作不慎大腿肌肉被剪角铁的机器撕裂…」</p>
</blockquote>
<p>作者Tara Westover的童年，就是在这样的一个家庭里成长起来的。识字但没有任何知识或常识。生活在哥哥Shawn的操纵、暴力和父母以及其他兄弟姊妹的漠视、虐待下，自己准备SAT考上大学，最后去剑桥读了博士。即便是到了全书的最后，Tara的撕裂和殚精竭虑，离开了家但始终被过往的经历牵制。</p>
<p>合页后我长吁短叹一阵，并且惊叹于人类自我救赎和成长的力量。在这个过程中，你没有办法看清前路、判断其他人的建议，面对选择，也都莫衷一是。</p>
<p>朋友的观点是：<br>
「 “你当像鸟飞往你的山”，但“你的山”并不是就在那儿，而是，你要去苦苦地寻找，甚至，很长时间里你根本就看不到哪儿有山，你只能懵逼地在半空中乱扑腾，争取不掉到地上。」</p>
<p>只有斩断联系、孤身上路，才可能慢慢接近你的山。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[什么是CSAT及如何度量CSAT（客户满意度）?]]></title>
        <id>https://courtneychow88.github.io/post/shi-me-shi-csat-ji-ru-he-du-liang-csatke-hu-man-yi-du/</id>
        <link href="https://courtneychow88.github.io/post/shi-me-shi-csat-ji-ru-he-du-liang-csatke-hu-man-yi-du/">
        </link>
        <updated>2020-03-13T10:54:49.000Z</updated>
        <summary type="html"><![CDATA[<p>CSAT是客户满意度的缩写，作为一个核心表现指标，它被广泛地运用在评估和追踪客户对当前组织或企业提供的产品是否感到满意。</p>
]]></summary>
        <content type="html"><![CDATA[<p>CSAT是客户满意度的缩写，作为一个核心表现指标，它被广泛地运用在评估和追踪客户对当前组织或企业提供的产品是否感到满意。</p>
<!-- more -->
<h2 id="csat如何被度量">CSAT如何被度量？</h2>
<p>CSAT通常出现子客户反馈问卷的最底部，由一个或多个选项构成。例如：</p>
<blockquote>
<p>请为你所收到的服务或产品进行打分（1-5分制）：</p>
</blockquote>
<ol>
<li>非常不满意</li>
<li>不满意</li>
<li>中立，没有不满意或满意</li>
<li>满意</li>
<li>非常满意<br>
<img src="https://courtneychow88.github.io/post-images/1584097030862.png" alt="" loading="lazy"></li>
</ol>
<p>问卷所收集到的数据结果，可以以平均分的方式表现综合客户满意度评分（Composite Customer Satisfaction Score），但是CSAT通常以百分比出现：这个客户100%感到满意，或这个客户0%感到不满意。（这个翻译有点怪，他的意思是说，一个客户要么是满意，要么其实是不满意的。）</p>
<h2 id="计算csat">计算CSAT</h2>
<p>为了计算CSAT，只有选择4（满意） 或 5（非常满意）的样本数据才会纳入计算。事实证明，对反应客户留存率来说，只有使用最高分数来评估，才是最准确的。<br>
感到满意的客户数（4分和5分）/ 所有客户数 x 100% = % 客户觉得满意</p>
<h2 id="那csat和nps有什么区别呢">那CSAT和NPS有什么区别呢？</h2>
<p>CSAT衡量客户对产品或服务的满意程度，同时NPS衡量客户对品牌或组织的忠诚度。</p>
<p>CSAT 的目标是收集客户对一场交互、产品或活动的及时反馈，但当面对想要衡量客户与企业之间的长期关系时，CSAT的作用就受限了。</p>
<p>CAST可以采用多个问题的组合，去采集特定触点的客户体验反馈。例如：请为我们的电话服务/物流服务进行打分？</p>
<p>相反的，NPS 是一个简单独立的问题，它衡量了客户的忠诚度。”你有多大的可能性会向同事和家人推荐我们的品牌、组织、服务？“这问题，旨在让消费者从一个更大的视角去度量品牌、产品，并且关注到消费者自己的意图（是否愿意推荐），而不是总体的满意程度。</p>
<h2 id="用好csat">用好CSAT</h2>
<p>像NPS一样，CSAT只是一种对客户体验的度量方式。你针对这些分数所采取的行动和变革才是最重要的。CSAT（和NPS）分数需要后续投入进一步用户研究定性分析，才能帮助你采取行动，提升关键领域。</p>
<h2 id="把csat和收入关联起来">把CSAT和收入关联起来</h2>
<p>在真空中度量客户满意度毫无裨益。但当你了解到满意度是如何和收入关联在一起时，影响市场的营销动作才会生效。追踪在每个客户身上产生的盈利数据，被称为客户生命周期价值。这是你称为客户体验大师的下一步动作。</p>
]]></content>
    </entry>
</feed>